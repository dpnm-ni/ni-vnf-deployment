# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class targetInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, vnf_inst_prefix: str='sh-', sfcr_prefix: str='sh-', sfc_prefix: str='sh-', mon_win_sec: int=10):  # noqa: E501
        """SFCInfo - a model defined in Swagger

        :param vnf_ist_prefix: The vnf_ist_prefix of this targetInfo.  # noqa: E501
        :type vnf_ist_prefix: str
        :param sfcr_prefix: The sfcr_prefix of this targetInfo.  # noqa: E501
        :type sfcr_prefix: str
        :param sfc_prefix: The sfc_prefix of this targetInfo.  # noqa: E501
        :type sfc_prefix: str
        :param mon_win_sec: The mon_win_sec of this targetInfo.  # noqa: E501
        :type mon_win_sec: int
        """
        self.swagger_types = {
            'vnf_inst_prefix': str,
            'sfcr_prefix': str,
            'sfc_prefix': str,
            'mon_win_sec': int
        }

        self.attribute_map = {
            'vnf_inst_prefix': 'sh-',
            'sfcr_prefix': 'sh-',
            'sfc_prefix': 'sh-',
            'mon_win_sec': 10
        }

        self._vnf_inst_prefix = vnf_inst_prefix
        self._sfcr_prefix = sfcr_prefix
        self._sfc_prefix = sfc_prefix
        self._mon_win_sec = mon_win_sec

    @classmethod
    def from_dict(cls, dikt) -> 'targetInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The targetInfo of this targetInfo.  # noqa: E501
        :rtype: targetInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vnf_inst_prefix(self) -> str:
        """Gets the vnf_inst_prefix of this targetInfo.


        :return: The vnf_inst_prefix of this targetInfo.
        :rtype: str
        """
        return self._vnf_inst_prefix

    @vnf_inst_prefix.setter
    def vnf_inst_prefix(self, vnf_inst_prefix: str):
        """Sets the vnf_inst_prefix of this targetInfo.


        :param vnf_inst_prefix: The vnf_inst_prefix of this targetInfo.
        :type vnf_inst_prefix: str
        """

        self._vnf_inst_prefix = vnf_inst_prefix

    @property
    def sfcr_prefix(self) -> str:
        """Gets the sfcr_prefix of this targetInfo.


        :return: The sfcr_prefix of this targetInfo.
        :rtype: str
        """
        return self._sfcr_prefix

    @sfcr_prefix.setter
    def sfcr_prefix(self, sfcr_prefix: str):
        """Sets the sfcr_prefix of this targetInfo.


        :param sfcr_prefix: The sfcr_prefix of this targetInfo.
        :type sfcr_prefix: str
        """

        self._sfcr_prefix = sfcr_prefix

    @property
    def sfc_prefix(self) -> str:
        """Gets the sfc_prefix of this targetInfo.


        :return: The sfc_prefix of this targetInfo.
        :rtype: str
        """
        return self._sfc_prefix

    @sfc_prefix.setter
    def sfc_prefix(self, sfc_prefix: str):
        """Sets the sfc_prefix of this targetInfo.


        :param sfc_prefix: The sfc_prefix of this targetInfo.
        :type sfc_prefix: str
        """

        self._sfc_prefix = sfc_prefix

    @property
    def mon_win_sec(self) -> int:
        """Gets the mon_win_sec of this targetInfo.


        :return: The mon_win_sec of this targetInfo.
        :rtype: str
        """
        return self._mon_win_sec

    @mon_win_sec.setter
    def mon_win_sec(self, mon_win_sec: int):
        """Sets the mon_win_sec of this targetInfo.


        :param mon_win_sec: The mon_win_sec of this targetInfo.
        :type mon_win_sec: int
        """

        self._mon_win_sec = mon_win_sec

